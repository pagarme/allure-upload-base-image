version: 2.1

executors:
  docker-publisher:
    environment:
      IMAGE_NAME: pagarme/allure-upload
    docker:
      - image: circleci/buildpack-deps:stretch
jobs:
  checkout-code:
    machine: true
    steps:
      - checkout
      - persist_to_workspace:
          root: ~/project
          paths:
            - ./
  docker-linter:
    machine: true
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Docker linter
          command: docker run --rm -i hadolint/hadolint < dockerfile
        
  linter:
    machine: true
    steps:
      - attach_workspace:
          at: ~/project
      - run: |
            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo ' [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
      - run: |
          nvm install v10
          nvm alias default v10
      - run: npm install
      - run:
          name: JS linter
          command: npm run lint
      - store_artifacts:
          path: /home/circleci/.npm/_logs/
  build:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: ~/project
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            export IMAGE_VERSION_TAG=${CIRCLE_SHA1:0:7}
            docker build -t $IMAGE_NAME:latest -t $IMAGE_NAME:$IMAGE_VERSION_TAG .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            export IMAGE_VERSION_TAG=${CIRCLE_SHA1:0:7}
            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:$IMAGE_VERSION_TAG
workflows:
      version: 2
      build-master:
        jobs:
          - checkout-code
          - docker-linter:
              requires:
                - checkout-code
          - linter:
              requires:
                - checkout-code
          - build:
              context:
                - dockerhub
              requires:
                - docker-linter
                - linter
              filters:
                branches:
                  only: main
          - publish-latest:
              context:
                - dockerhub
              requires:
                - build
              filters:
                branches:
                  only: main
